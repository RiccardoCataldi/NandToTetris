$date
	Thu Sep 11 21:51:43 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_full_adder $end
$var wire 1 ! sum $end
$var wire 1 " cout $end
$var reg 1 # a $end
$var reg 1 $ b $end
$var reg 1 % cin $end
$scope module dut $end
$var wire 1 # a $end
$var wire 1 $ b $end
$var wire 1 % cin $end
$var wire 1 ! sum $end
$var wire 1 & s1 $end
$var wire 1 " cout $end
$var wire 1 ' c2 $end
$var wire 1 ( c1 $end
$scope module ha1 $end
$var wire 1 # a $end
$var wire 1 $ b $end
$var wire 1 & s $end
$var wire 1 ( c $end
$scope module u0 $end
$var wire 1 # a $end
$var wire 1 $ b $end
$var wire 1 & y $end
$var wire 1 ) notb $end
$var wire 1 * nota $end
$var wire 1 + n4 $end
$var wire 1 , n2 $end
$scope module u0 $end
$var wire 1 # a $end
$var wire 1 * y $end
$scope module u0 $end
$var wire 1 # a $end
$var wire 1 # b $end
$var wire 1 * y $end
$upscope $end
$upscope $end
$scope module u1 $end
$var wire 1 $ a $end
$var wire 1 ) y $end
$scope module u0 $end
$var wire 1 $ a $end
$var wire 1 $ b $end
$var wire 1 ) y $end
$upscope $end
$upscope $end
$scope module u2 $end
$var wire 1 * a $end
$var wire 1 $ b $end
$var wire 1 , y $end
$var wire 1 - nand_out $end
$scope module u0 $end
$var wire 1 * a $end
$var wire 1 $ b $end
$var wire 1 - y $end
$upscope $end
$scope module u1 $end
$var wire 1 - a $end
$var wire 1 , y $end
$scope module u0 $end
$var wire 1 - a $end
$var wire 1 - b $end
$var wire 1 , y $end
$upscope $end
$upscope $end
$upscope $end
$scope module u3 $end
$var wire 1 # a $end
$var wire 1 ) b $end
$var wire 1 + y $end
$var wire 1 . nand_out $end
$scope module u0 $end
$var wire 1 # a $end
$var wire 1 ) b $end
$var wire 1 . y $end
$upscope $end
$scope module u1 $end
$var wire 1 . a $end
$var wire 1 + y $end
$scope module u0 $end
$var wire 1 . a $end
$var wire 1 . b $end
$var wire 1 + y $end
$upscope $end
$upscope $end
$upscope $end
$scope module u4 $end
$var wire 1 , a $end
$var wire 1 + b $end
$var wire 1 & y $end
$var wire 1 / nb $end
$var wire 1 0 na $end
$scope module u0 $end
$var wire 1 , a $end
$var wire 1 0 y $end
$scope module u0 $end
$var wire 1 , a $end
$var wire 1 , b $end
$var wire 1 0 y $end
$upscope $end
$upscope $end
$scope module u1 $end
$var wire 1 + a $end
$var wire 1 / y $end
$scope module u0 $end
$var wire 1 + a $end
$var wire 1 + b $end
$var wire 1 / y $end
$upscope $end
$upscope $end
$scope module u2 $end
$var wire 1 0 a $end
$var wire 1 / b $end
$var wire 1 & y $end
$upscope $end
$upscope $end
$upscope $end
$scope module u1 $end
$var wire 1 # a $end
$var wire 1 $ b $end
$var wire 1 ( y $end
$var wire 1 1 nand_out $end
$scope module u0 $end
$var wire 1 # a $end
$var wire 1 $ b $end
$var wire 1 1 y $end
$upscope $end
$scope module u1 $end
$var wire 1 1 a $end
$var wire 1 ( y $end
$scope module u0 $end
$var wire 1 1 a $end
$var wire 1 1 b $end
$var wire 1 ( y $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module ha2 $end
$var wire 1 & a $end
$var wire 1 % b $end
$var wire 1 ! s $end
$var wire 1 ' c $end
$scope module u0 $end
$var wire 1 & a $end
$var wire 1 % b $end
$var wire 1 ! y $end
$var wire 1 2 notb $end
$var wire 1 3 nota $end
$var wire 1 4 n4 $end
$var wire 1 5 n2 $end
$scope module u0 $end
$var wire 1 & a $end
$var wire 1 3 y $end
$scope module u0 $end
$var wire 1 & a $end
$var wire 1 & b $end
$var wire 1 3 y $end
$upscope $end
$upscope $end
$scope module u1 $end
$var wire 1 % a $end
$var wire 1 2 y $end
$scope module u0 $end
$var wire 1 % a $end
$var wire 1 % b $end
$var wire 1 2 y $end
$upscope $end
$upscope $end
$scope module u2 $end
$var wire 1 3 a $end
$var wire 1 % b $end
$var wire 1 5 y $end
$var wire 1 6 nand_out $end
$scope module u0 $end
$var wire 1 3 a $end
$var wire 1 % b $end
$var wire 1 6 y $end
$upscope $end
$scope module u1 $end
$var wire 1 6 a $end
$var wire 1 5 y $end
$scope module u0 $end
$var wire 1 6 a $end
$var wire 1 6 b $end
$var wire 1 5 y $end
$upscope $end
$upscope $end
$upscope $end
$scope module u3 $end
$var wire 1 & a $end
$var wire 1 2 b $end
$var wire 1 4 y $end
$var wire 1 7 nand_out $end
$scope module u0 $end
$var wire 1 & a $end
$var wire 1 2 b $end
$var wire 1 7 y $end
$upscope $end
$scope module u1 $end
$var wire 1 7 a $end
$var wire 1 4 y $end
$scope module u0 $end
$var wire 1 7 a $end
$var wire 1 7 b $end
$var wire 1 4 y $end
$upscope $end
$upscope $end
$upscope $end
$scope module u4 $end
$var wire 1 5 a $end
$var wire 1 4 b $end
$var wire 1 ! y $end
$var wire 1 8 nb $end
$var wire 1 9 na $end
$scope module u0 $end
$var wire 1 5 a $end
$var wire 1 9 y $end
$scope module u0 $end
$var wire 1 5 a $end
$var wire 1 5 b $end
$var wire 1 9 y $end
$upscope $end
$upscope $end
$scope module u1 $end
$var wire 1 4 a $end
$var wire 1 8 y $end
$scope module u0 $end
$var wire 1 4 a $end
$var wire 1 4 b $end
$var wire 1 8 y $end
$upscope $end
$upscope $end
$scope module u2 $end
$var wire 1 9 a $end
$var wire 1 8 b $end
$var wire 1 ! y $end
$upscope $end
$upscope $end
$upscope $end
$scope module u1 $end
$var wire 1 & a $end
$var wire 1 % b $end
$var wire 1 ' y $end
$var wire 1 : nand_out $end
$scope module u0 $end
$var wire 1 & a $end
$var wire 1 % b $end
$var wire 1 : y $end
$upscope $end
$scope module u1 $end
$var wire 1 : a $end
$var wire 1 ' y $end
$scope module u0 $end
$var wire 1 : a $end
$var wire 1 : b $end
$var wire 1 ' y $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module u0 $end
$var wire 1 ( a $end
$var wire 1 ' b $end
$var wire 1 " y $end
$var wire 1 ; nb $end
$var wire 1 < na $end
$scope module u0 $end
$var wire 1 ( a $end
$var wire 1 < y $end
$scope module u0 $end
$var wire 1 ( a $end
$var wire 1 ( b $end
$var wire 1 < y $end
$upscope $end
$upscope $end
$scope module u1 $end
$var wire 1 ' a $end
$var wire 1 ; y $end
$scope module u0 $end
$var wire 1 ' a $end
$var wire 1 ' b $end
$var wire 1 ; y $end
$upscope $end
$upscope $end
$scope module u2 $end
$var wire 1 < a $end
$var wire 1 ; b $end
$var wire 1 " y $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
1<
1;
1:
19
18
17
16
05
04
13
12
11
10
1/
1.
1-
0,
0+
1*
1)
0(
0'
0&
0%
0$
0#
0"
0!
$end
#1000
1!
09
15
02
06
1%
#2000
08
14
03
07
1!
1&
19
00
05
1,
12
16
0)
0-
0%
1$
#3000
0!
18
1"
04
0;
17
1'
02
0:
1%
#4000
1!
03
08
0"
0/
1&
14
1;
1+
10
07
0'
0.
0,
12
1:
1)
1-
0*
0%
0$
1#
#5000
0!
18
1"
04
0;
17
1'
02
0:
1%
#6000
13
0!
0&
18
1/
04
1;
0+
0<
17
0'
1.
1(
12
1:
0)
01
0%
1$
#7000
1!
09
15
02
06
1%
#9000
